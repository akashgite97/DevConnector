[{"F:\\WEB\\DevConnector\\client\\src\\index.js":"1","F:\\WEB\\DevConnector\\client\\src\\App.js":"2","F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Landing.js":"3","F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Navbar.js":"4","F:\\WEB\\DevConnector\\client\\src\\Components\\auth\\Register.js":"5","F:\\WEB\\DevConnector\\client\\src\\Components\\auth\\Login.js":"6","F:\\WEB\\DevConnector\\client\\src\\store.js":"7","F:\\WEB\\DevConnector\\client\\src\\reducers\\index.js":"8","F:\\WEB\\DevConnector\\client\\src\\reducers\\alert.js":"9","F:\\WEB\\DevConnector\\client\\src\\actions\\types.js":"10","F:\\WEB\\DevConnector\\client\\src\\actions\\alert.js":"11","F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Alert.js":"12","F:\\WEB\\DevConnector\\client\\src\\actions\\auth.js":"13","F:\\WEB\\DevConnector\\client\\src\\reducers\\auth.js":"14","F:\\WEB\\DevConnector\\client\\src\\utils\\setAuthToken.js":"15","F:\\WEB\\DevConnector\\client\\src\\routing\\PrivateRoute.js":"16","F:\\WEB\\DevConnector\\client\\src\\Dashboard\\Dashboard.js":"17","F:\\WEB\\DevConnector\\client\\src\\actions\\profile.js":"18","F:\\WEB\\DevConnector\\client\\src\\reducers\\profile.js":"19","F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Spinner.js":"20","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\CreateProfile.js":"21","F:\\WEB\\DevConnector\\client\\src\\Dashboard\\DashboardAction.js":"22","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\EditProfile.js":"23","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\AddExperience.js":"24","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\AddEducation.js":"25","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ExperienceDetails.js":"26","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\EducationDetails.js":"27","F:\\WEB\\DevConnector\\client\\src\\Components\\profiles\\Profiles.js":"28","F:\\WEB\\DevConnector\\client\\src\\Components\\profiles\\ProfileItem.js":"29","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileDetails.js":"30","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileTop.js":"31","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileAbout.js":"32","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileExperience.js":"33","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileEducation.js":"34","F:\\WEB\\DevConnector\\client\\src\\reducers\\post.js":"35","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\Posts.js":"36","F:\\WEB\\DevConnector\\client\\src\\actions\\post.js":"37","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostItem.js":"38","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostForm.js":"39","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostDetails.js":"40","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\comments\\CommentForm.js":"41","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\comments\\CommentItem.js":"42"},{"size":198,"mtime":1621929241600,"results":"43","hashOfConfig":"44"},{"size":2554,"mtime":1622546129477,"results":"45","hashOfConfig":"44"},{"size":1033,"mtime":1622546256725,"results":"46","hashOfConfig":"44"},{"size":1396,"mtime":1622546226718,"results":"47","hashOfConfig":"44"},{"size":3142,"mtime":1621931881985,"results":"48","hashOfConfig":"44"},{"size":2312,"mtime":1621929171660,"results":"49","hashOfConfig":"44"},{"size":399,"mtime":1610345908662,"results":"50","hashOfConfig":"44"},{"size":243,"mtime":1622442184420,"results":"51","hashOfConfig":"44"},{"size":453,"mtime":1621930221610,"results":"52","hashOfConfig":"44"},{"size":1140,"mtime":1622538255471,"results":"53","hashOfConfig":"44"},{"size":336,"mtime":1610421777920,"results":"54","hashOfConfig":"44"},{"size":406,"mtime":1621932305170,"results":"55","hashOfConfig":"44"},{"size":2209,"mtime":1622023843862,"results":"56","hashOfConfig":"44"},{"size":1187,"mtime":1622181983212,"results":"57","hashOfConfig":"44"},{"size":279,"mtime":1615445713221,"results":"58","hashOfConfig":"44"},{"size":433,"mtime":1622184131067,"results":"59","hashOfConfig":"44"},{"size":1966,"mtime":1622453507516,"results":"60","hashOfConfig":"44"},{"size":5678,"mtime":1622259457006,"results":"61","hashOfConfig":"44"},{"size":1211,"mtime":1622439820809,"results":"62","hashOfConfig":"44"},{"size":190,"mtime":1622099457742,"results":"63","hashOfConfig":"44"},{"size":7387,"mtime":1622623470627,"results":"64","hashOfConfig":"44"},{"size":651,"mtime":1622453452380,"results":"65","hashOfConfig":"44"},{"size":8434,"mtime":1622283847715,"results":"66","hashOfConfig":"44"},{"size":3686,"mtime":1622198207208,"results":"67","hashOfConfig":"44"},{"size":3628,"mtime":1622199035574,"results":"68","hashOfConfig":"44"},{"size":1261,"mtime":1622443646403,"results":"69","hashOfConfig":"44"},{"size":1254,"mtime":1622443639442,"results":"70","hashOfConfig":"44"},{"size":1165,"mtime":1622453699328,"results":"71","hashOfConfig":"44"},{"size":900,"mtime":1622453391048,"results":"72","hashOfConfig":"44"},{"size":2339,"mtime":1622526295646,"results":"73","hashOfConfig":"44"},{"size":1727,"mtime":1622266788558,"results":"74","hashOfConfig":"44"},{"size":666,"mtime":1622453328783,"results":"75","hashOfConfig":"44"},{"size":621,"mtime":1622269676655,"results":"76","hashOfConfig":"44"},{"size":683,"mtime":1622270201272,"results":"77","hashOfConfig":"44"},{"size":1756,"mtime":1622545830189,"results":"78","hashOfConfig":"44"},{"size":876,"mtime":1622545166257,"results":"79","hashOfConfig":"44"},{"size":3975,"mtime":1622545125232,"results":"80","hashOfConfig":"44"},{"size":2259,"mtime":1622543819399,"results":"81","hashOfConfig":"44"},{"size":1006,"mtime":1622451419099,"results":"82","hashOfConfig":"44"},{"size":1137,"mtime":1622545866683,"results":"83","hashOfConfig":"44"},{"size":1041,"mtime":1622543153922,"results":"84","hashOfConfig":"44"},{"size":1199,"mtime":1622544707550,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1sj5urd",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"F:\\WEB\\DevConnector\\client\\src\\index.js",[],["180","181"],"F:\\WEB\\DevConnector\\client\\src\\App.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Landing.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Navbar.js",["182"],"import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ logout }) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const loading = useSelector((state) => state.auth.loading);\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <NavLink to='/dashboard'>Dashboard</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/posts'>Blog</NavLink>\r\n      </li>\r\n\r\n      <li>\r\n        <NavLink to='/profiles'>Developers</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout}>\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <NavLink to='/profiles'>Developers</NavLink>\r\n      </li>\r\n\r\n      <li>\r\n        <NavLink to='/register'>Register</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to='/login'>Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <nav className='navbar bg-dark'>\r\n        <h1>\r\n          <NavLink to='/'>\r\n            <i className='fa fa-code'></i> DevConnector\r\n          </NavLink>\r\n        </h1>\r\n        {!loading && <> {isAuthenticated ? authLinks : guestLinks}</>}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { logout })(Navbar);\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\auth\\Register.js",["183","184"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Register = ({ setAlert, register }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password1: '',\r\n  });\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  const history = useHistory();\r\n\r\n  const { name, email, password, password1 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== password1) {\r\n      setAlert('Password do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n      //setTimeout(() => history.push('/login'), 2000);\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign Up</h1>\r\n        <p className='lead'>\r\n          <i className='fa fa-user'></i> Create Your Account\r\n        </p>\r\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Name'\r\n              name='name'\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              name='password1'\r\n              value={password1}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Register' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Already have an account? <NavLink to='/login'>Sign In</NavLink>\r\n        </p>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nRegister.prototype = {\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\n/* s */\r\n\r\nexport default connect(null, { setAlert, register })(Register);\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\auth\\Login.js",[],"F:\\WEB\\DevConnector\\client\\src\\store.js",[],"F:\\WEB\\DevConnector\\client\\src\\reducers\\index.js",[],"F:\\WEB\\DevConnector\\client\\src\\reducers\\alert.js",[],"F:\\WEB\\DevConnector\\client\\src\\actions\\types.js",[],"F:\\WEB\\DevConnector\\client\\src\\actions\\alert.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Alert.js",[],"F:\\WEB\\DevConnector\\client\\src\\actions\\auth.js",[],"F:\\WEB\\DevConnector\\client\\src\\reducers\\auth.js",[],"F:\\WEB\\DevConnector\\client\\src\\utils\\setAuthToken.js",[],"F:\\WEB\\DevConnector\\client\\src\\routing\\PrivateRoute.js",[],"F:\\WEB\\DevConnector\\client\\src\\Dashboard\\Dashboard.js",["185"],"import React, { useEffect } from 'react';\r\nimport { deleteAccount, getProfile } from '../actions/profile';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport Spinner from '../Components/layouts/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardAction from './DashboardAction';\r\nimport ExperienceDetails from '../Components/Profile/ExperienceDetails';\r\nimport EducationDetails from '../Components/Profile/EducationDetails';\r\n\r\nconst Dashboard = ({ getProfile }) => {\r\n  const dispatch = useDispatch();\r\n  const profiles = useSelector((state) => state.profile);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { user } = auth;\r\n  const { loading, profile } = profiles;\r\n\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead '>Welcome: {user.name}</p>\r\n      {profile !== null ? (\r\n        <>\r\n          <DashboardAction />\r\n          {profile.experience === '' ? (\r\n            'No Exp Added'\r\n          ) : (\r\n            <ExperienceDetails experience={profile.experience} />\r\n          )}\r\n          <EducationDetails education={profile.education} />\r\n          <div className='my-2'>\r\n            <button\r\n              className='btn btn-danger'\r\n              onClick={dispatch(deleteAccount)}\r\n            >\r\n              Delete Account\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>You have not yet setup a profile, Please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile })(Dashboard);\r\n","F:\\WEB\\DevConnector\\client\\src\\actions\\profile.js",[],"F:\\WEB\\DevConnector\\client\\src\\reducers\\profile.js",[],["186","187"],"F:\\WEB\\DevConnector\\client\\src\\Components\\layouts\\Spinner.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\CreateProfile.js",[],"F:\\WEB\\DevConnector\\client\\src\\Dashboard\\DashboardAction.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\EditProfile.js",["188"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createProfile, getProfile } from '../../actions/profile';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst EditProfile = () => {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubname: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedin: '',\r\n  });\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubname,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedin,\r\n  } = formData;\r\n\r\n  const dispatch = useDispatch();\r\n  const profiledata = useSelector((state) => state.profile);\r\n  const { loading, profile } = profiledata;\r\n\r\n  const [toogleSocial, setToggleSocial] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfile);\r\n    setFormData({\r\n      company: loading || profile == null ? ' ' : profile.company,\r\n      website: loading || profile == null ? ' ' : profile.company,\r\n      location: loading || profile == null ? ' ' : profile.location,\r\n      bio: loading || profile == null ? ' ' : profile.bio,\r\n      status: loading || profile == null ? ' ' : profile.status,\r\n      githubname: loading || profile == null ? ' ' : profile.githubname,\r\n      skills: loading || profile == null ? ' ' : profile.skills,\r\n      youtube: loading || profile == null ? ' ' : profile.youtube,\r\n      facebook: loading || profile == null ? ' ' : profile.facebook,\r\n      twitter: loading || profile == null ? ' ' : profile.twitter,\r\n      instagram: loading || profile == null ? ' ' : profile.instagram,\r\n      linkedin: loading || profile == null ? ' ' : profile.linkedin,\r\n    });\r\n  }, []);\r\n\r\n  const handleChane = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProfile(formData, true));\r\n\r\n    setTimeout(() => {\r\n      history.push('/dashboard');\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <>\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Create Your Profile</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Let's get some information to make\r\n          your profile stand out\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className='form' onSubmit={onsubmit}>\r\n          <div className='form-group'>\r\n            <select\r\n              name='status'\r\n              value={status}\r\n              onChange={(e) => handleChane(e)}\r\n            >\r\n              <option value='0'>* Select Professional Status</option>\r\n              <option value='Developer'>Developer</option>\r\n              <option value='Junior Developer'>Junior Developer</option>\r\n              <option value='Senior Developer'>Senior Developer</option>\r\n              <option value='Manager'>Manager</option>\r\n              <option value='Student or Learning'>Student or Learning</option>\r\n              <option value='Instructor'>Instructor or Teacher</option>\r\n              <option value='Intern'>Intern</option>\r\n              <option value='Other'>Other</option>\r\n            </select>\r\n            <small className='form-text'>\r\n              Give us an idea of where you are at in your career\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Company'\r\n              name='company'\r\n              value={company}\r\n              onChange={(e) => handleChane(e)}\r\n            />\r\n            <small className='form-text'>\r\n              Could be your own company or one you work for\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Website'\r\n              name='website'\r\n              value={website}\r\n              onChange={(e) => handleChane(e)}\r\n            />\r\n            <small className='form-text'>\r\n              Could be your own or a company website\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Location'\r\n              name='location'\r\n              value={location}\r\n              onChange={(e) => handleChane(e)}\r\n            />\r\n            <small className='form-text'>\r\n              City & state suggested (eg. Boston, MA)\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='* Skills'\r\n              name='skills'\r\n              value={skills}\r\n              onChange={(e) => handleChane(e)}\r\n            />\r\n            <small className='form-text'>\r\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Github Username'\r\n              name='githubname'\r\n              value={githubname}\r\n              onChange={(e) => handleChane(e)}\r\n            />\r\n            <small className='form-text'>\r\n              If you want your latest repos and a Github link, include your\r\n              username\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <textarea\r\n              placeholder='A short bio of yourself'\r\n              name='bio'\r\n              value={bio}\r\n              onChange={(e) => handleChane(e)}\r\n            ></textarea>\r\n            <small className='form-text'>Tell us a little about yourself</small>\r\n          </div>\r\n\r\n          <div className='my-2'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-light'\r\n              onClick={() => setToggleSocial(!toogleSocial)}\r\n            >\r\n              Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n          </div>\r\n          {toogleSocial && (\r\n            <>\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-twitter fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Twitter URL'\r\n                  name='twitter'\r\n                  value={twitter}\r\n                  onChange={(e) => handleChane(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-facebook fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Facebook URL'\r\n                  name='facebook'\r\n                  value={facebook}\r\n                  onChange={(e) => handleChane(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-youtube fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='YouTube URL'\r\n                  name='youtube'\r\n                  value={youtube}\r\n                  onChange={(e) => handleChane(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-linkedin fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Linkedin URL'\r\n                  name='linkedin'\r\n                  value={linkedin}\r\n                  onChange={(e) => handleChane(e)}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-instagram fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Instagram URL'\r\n                  name='instagram'\r\n                  value={instagram}\r\n                  onChange={(e) => handleChane(e)}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <input type='submit' className='btn btn-primary my-1' />\r\n          <Link className='btn btn-light my-1' to='/'>\r\n            Go Back\r\n          </Link>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\AddExperience.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\AddEducation.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ExperienceDetails.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\EducationDetails.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\profiles\\Profiles.js",["189"],"import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport Spinner from '../layouts/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = () => {\r\n  const dispatch = useDispatch();\r\n  const profiledata = useSelector((state) => state.profile);\r\n  const { loading, profiles } = profiledata;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfiles);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <h1 className='text-primary large'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'>\r\n              Browse and connect with developers\r\n            </i>\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0\r\n              ? profiles.map((profile) => (\r\n                  <ProfileItem key={profile._id} profile={profile} />\r\n                ))\r\n              : 'No profile found'}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, getProfiles)(Profiles);\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\profiles\\ProfileItem.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileDetails.js",["190","191","192","193","194"],"import React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport Spinner from '../layouts/Spinner';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileTop from './ProfileTop';\r\nimport ExperienceDetails from './ExperienceDetails';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nconst ProfileDetails = ({ getProfileById }) => {\r\n  const { id } = useParams();\r\n  const profiledata = useSelector((state) => state.profile);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { loading, profile } = profiledata;\r\n  const { isAuthenticated, user } = auth;\r\n\r\n  useEffect(() => {\r\n    getProfileById(id);\r\n  }, [getProfileById]);\r\n\r\n  return (\r\n    <>\r\n      {profile == null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Bact to Profiles\r\n          </Link>\r\n\r\n          {isAuthenticated &&\r\n            auth.loading == false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-primary'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0\r\n                ? profile.experience.map((exp) => (\r\n                    <ProfileExperience key={exp.id} experience={exp} />\r\n                  ))\r\n                : 'No Experience '}\r\n            </div>\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0\r\n                ? profile.education.map((edu) => (\r\n                    <ProfileEducation key={edu.id} education={edu} />\r\n                  ))\r\n                : 'No Education '}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { getProfileById })(ProfileDetails);\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileTop.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileAbout.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileExperience.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\Profile\\ProfileEducation.js",[],"F:\\WEB\\DevConnector\\client\\src\\reducers\\post.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\Posts.js",[],"F:\\WEB\\DevConnector\\client\\src\\actions\\post.js",["195","196"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  ADD_COMMENT,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  GET_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  REMOVE_COMMENT,\r\n  UPDATE_LIKES,\r\n} from './types';\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n  const res = await axios.get('/api/posts');\r\n\r\n  try {\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const res = await axios.post('/api/posts', formData, config);\r\n\r\n  try {\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post added successfully', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLike = (id) => async (dispatch) => {\r\n  const res = await axios.put(`/api/posts/likes/${id}`);\r\n  console.log(res);\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  const res = await axios.put(`/api/posts/unlikes/${id}`);\r\n  console.log(res);\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//ADD Comment\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const res = await axios.post(\r\n    `/api/posts/comments/${postId}`,\r\n    formData,\r\n    config\r\n  );\r\n\r\n  try {\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment added successfully', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//DELETE Comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  const res = await axios.delete(`/api/posts/comments/${postId}/${commentId}`);\r\n\r\n  try {\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert('Comment deleted', 'danger'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n  try {\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { id },\r\n    });\r\n    dispatch(setAlert('Post Deleted', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n//Get PostById\r\nexport const getPostById = (id) => async (dispatch) => {\r\n  const res = await axios.get(`/api/posts/${id}`);\r\n\r\n  try {\r\n    dispatch({ type: GET_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: {\r\n        msg: error.response.statusText,\r\n        status: error.response.status,\r\n      },\r\n    });\r\n  }\r\n};\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostItem.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostForm.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\PostDetails.js",["197"],"import React, { useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPostById } from '../../actions/post';\r\nimport Spinner from '../layouts/Spinner';\r\nimport CommentForm from './comments/CommentForm';\r\nimport CommentItem from './comments/CommentItem';\r\nimport PostItem from './PostItem';\r\n\r\nconst PostDetails = ({ getPostById }) => {\r\n  const { id } = useParams();\r\n\r\n  const postData = useSelector((state) => state.post);\r\n  const { post, loading } = postData;\r\n\r\n  useEffect(() => {\r\n    getPostById(id);\r\n  }, []);\r\n\r\n  return loading && post == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <>\r\n      <Link to='/posts' className='btn btn-light '>\r\n        Back to Posts\r\n      </Link>\r\n      <CommentForm postId={post._id} />\r\n      <PostItem posts={post} showActions={false} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(null, { getPostById })(PostDetails);\r\n","F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\comments\\CommentForm.js",[],"F:\\WEB\\DevConnector\\client\\src\\Components\\posts\\comments\\CommentItem.js",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":23,"column":9,"nodeType":"204","endLine":23,"endColumn":29},{"ruleId":"205","severity":1,"message":"206","line":2,"column":23,"nodeType":"207","messageId":"208","endLine":2,"endColumn":34},{"ruleId":"205","severity":1,"message":"209","line":19,"column":9,"nodeType":"207","messageId":"208","endLine":19,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":20,"column":6,"nodeType":"212","endLine":20,"endColumn":8,"suggestions":"213"},{"ruleId":"198","replacedBy":"214"},{"ruleId":"200","replacedBy":"215"},{"ruleId":"210","severity":1,"message":"216","line":60,"column":6,"nodeType":"212","endLine":60,"endColumn":8,"suggestions":"217"},{"ruleId":"210","severity":1,"message":"218","line":14,"column":6,"nodeType":"212","endLine":14,"endColumn":8,"suggestions":"219"},{"ruleId":"205","severity":1,"message":"206","line":2,"column":19,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"205","severity":1,"message":"220","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":25},{"ruleId":"205","severity":1,"message":"221","line":17,"column":28,"nodeType":"207","messageId":"208","endLine":17,"endColumn":32},{"ruleId":"210","severity":1,"message":"222","line":21,"column":6,"nodeType":"212","endLine":21,"endColumn":22,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":34,"column":26,"nodeType":"226","messageId":"227","endLine":34,"endColumn":28},{"ruleId":"205","severity":1,"message":"228","line":131,"column":9,"nodeType":"207","messageId":"208","endLine":131,"endColumn":12},{"ruleId":"205","severity":1,"message":"228","line":151,"column":9,"nodeType":"207","messageId":"208","endLine":151,"endColumn":12},{"ruleId":"210","severity":1,"message":"229","line":18,"column":6,"nodeType":"212","endLine":18,"endColumn":8,"suggestions":"230"},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array. If 'getProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["233"],["231"],["232"],"React Hook useEffect has missing dependencies: 'dispatch', 'loading', and 'profile'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["235"],"'ExperienceDetails' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPostById' and 'id'. Either include them or remove the dependency array. If 'getPostById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [getProfile]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, loading, profile]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch]",{"range":"252","text":"253"},"Update the dependencies array to be: [getProfileById, id]",{"range":"254","text":"255"},"Update the dependencies array to be: [getPostById, id]",{"range":"256","text":"257"},[772,774],"[getProfile]",[1876,1878],"[dispatch, loading, profile]",[475,477],"[dispatch]",[844,860],"[getProfileById, id]",[605,607],"[getPostById, id]"]